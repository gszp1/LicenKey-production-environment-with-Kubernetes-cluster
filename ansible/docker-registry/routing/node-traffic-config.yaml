- name: Configures nodes to be able to use TLS communication
  hosts: kubernetes_common
  tasks:
    - name: Retrieve ingress IP from file
      ansible.builtin.command:
        cmd: cat "/shared_storage/share/nginx-ingress-ip.txt"
      register: ingress_ip
      changed_when: false

    - name: Check if host entry for ingress-controller exists
      become: true
      ansible.builtin.command:
        cmd: grep "docker-registry.cluster.local" /etc/hosts
      register: grep_hosts
      failed_when: grep_hosts.rc not in [0, 1]
      changed_when: false
      ignore_errors: true

    - name: Create host entry for ingress-controller
      become: true
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ ingress_ip.stdout }} docker-registry.cluster.local"
        state: present
      when: grep_hosts.rc == 1

    - name: Copy CA certificate
      become: true
      ansible.builtin.copy:
        src: /shared_storage/share/ca.crt
        dest: /usr/local/share/ca-certificates/ca.crt
        remote_src: true
        owner: root
        group: root
        mode: "0644"

    - name: Load docker registry user name from file
      ansible.builtin.command:
        cmd: cat /shared_storage/share/user
      register: user_name
      changed_when: false

    - name: Load docker registry password from file
      ansible.builtin.command:
        cmd: cat /shared_storage/share/password
      register: user_password
      changed_when: false

    - name: Reload ca-certificates
      become: true
      ansible.builtin.command:
        cmd: update-ca-certificates
      register: output
      changed_when: output.stdout != ""

    - name: Restart Docker
      become: true
      ansible.builtin.service:
        name: docker
        state: restarted

    - name: Login to docker registry
      become: true
      ansible.builtin.command:
        cmd: >
          docker login docker-registry.cluster.local
          --username "{{ user_name }}"
          --password "{{ user_password }}"
      changed_when: false
