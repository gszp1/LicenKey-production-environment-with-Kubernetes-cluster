- name: Configures nodes to be able to use TLS communication
  hosts: kubernetes_common
  become: true
  tasks:
    - name: Retrieve ingress IP from file
      ansible.builtin.command:
        cmd: cat "/shared_storage/share/nginx-ingress-ip.txt"
      register: ingress_ip
      changed_when: false

    - name: Check if host entry for ingress-controller exists
      ansible.builtin.command:
        cmd: grep "docker-registry.cluster.local" /etc/hosts
      register: grep_hosts
      failed_when: grep_hosts.rc not in [0, 1]
      changed_when: false
      ignore_errors: true

    - name: Create host entry for ingress-controller
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ ingress_ip.stdout }} docker-registry.cluster.local"
        state: present
      when: grep_hosts.rc == 1

    - name: Copy CA certificate
      ansible.builtin.copy:
        src: /shared_storage/share/ca.crt
        dest: /usr/local/share/ca-certificates/ca.crt
        remote_src: true
        owner: root
        group: root
        mode: "0644"

    - name: Create directory for certificates for docker
      ansible.builtin.file:
        path: /etc/docker/certs.d/docker-registry.cluster.local
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Copy certificate for docker
      ansible.builtin.copy:
        src: /shared_storage/share/ca.crt
        dest: /etc/docker/certs.d/docker-registry.cluster.local/ca.crt
        remote_src: true
        owner: root
        group: root
        mode: '0644'

    - name: Reload ca-certificates
      ansible.builtin.command:
        cmd: update-ca-certificates
      register: output
      changed_when: output.stdout != ""

    - name: Restart Docker
      ansible.builtin.service:
        name: docker
        state: restarted
